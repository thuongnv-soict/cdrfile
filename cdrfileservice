# CDR File(s) System Service, Copyright(c) by eKnowledge 2010
# -----------------------------------
# File  : cdrfile.jar
#
# Autor : eKnowledge Software
#
# Purpose : Start/Stop CDRFile Service
#
# -----------------------------------

#!/bin/sh
#set -x
# Setup JAVA and JSDK enviroment:
#export JAVA_HOME=$HOME/j2sdk1.4.2_09/bin
#export JAVA_HOME=/usr/java/bin
#export WORK_DIR=$HOME
CLASSPATH=$CLASSPATH:$HOME/jdbc/ojdbc14.jar:$HOME/ftp/ftp.jar:$HOME/sms/axis.jar:$HOME/sms/axis-ant.jar:$HOME/sms/commons-discovery-0.2.jar:$HOME/sms/commons-logging-1.0.4.jar:$HOME/sms/jaxrpc.jar:$HOME/sms/log4j-1.2.8.jar:$HOME/sms/saaj.jar:$HOME/sms/wsdl4j-1.5.1.jar:$HOME/sms/mail.jar:$HOME/sms/activation.jar:$HOME/cdrfile.jar; export CLASSPATH

cfg_file=$HOME/log

all_start()
{
  echo "CDR File(s) System ALL service starting..."
  ftp_start
  convert_start
  convert_in_start
  #charge_start
  export_start
  #collect_start
  general_start
  echo "CDR File(s) System ALL service already started."
}

ftp_start()
{
	cd $HOME
 	#Start FTP service
 	pid_file=$HOME/proc/cdrfile_ftp.pid
 	log_file=$HOME/log/ftp_service.log
 	APP_COMMAND=cdrfile.manager.FtpManager; export APP_COMMAND
 	if [ -f $pid_file ] ; then
    	echo "   - CDR File(s) System FTP service already started."
  	else
    	java -Xms512m -Xmx1024m $APP_COMMAND $cfg_file >>$log_file 2>&1 &
    	echo $! > $pid_file
    	echo "   - CDR File(s) System FTP service started."
	fi
}

convert_start()
{
  #Start CONVERT ALCATEL service
  pid_file=$HOME/proc/cdrfile_convert.pid
  log_file=$HOME/log/convert_service.log
  APP_COMMAND=cdrfile.manager.ConvertManager; export APP_COMMAND
  if [ -f $pid_file ] ; then
    echo "   - CDR File(s) System CONVERT service already started."
  else

    java -Xms1024m -Xmx2048m $APP_COMMAND $cfg_file >>$log_file 2>&1 &
    echo $! > $pid_file
    echo "   - CDR File(s) System CONVERT service started."
  fi
}

convert_in_start()
{
  #Start CONVERT IN service
  pid_file=$HOME/proc/cdrfile_in_convert.pid
  log_file=$HOME/log/convert_in_service.log
  APP_COMMAND=cdrfile.manager.ConvertManager; export APP_COMMAND
  group_shell=1
  if [ -f $pid_file ] ; then
    echo "   - CDR File(s) System CONVERT IN service already started."
  else
    java -Xms1024m -Xmx2048m $APP_COMMAND $cfg_file $group_shell >>$log_file 2>&1 &
    echo $! > $pid_file
    echo "   - CDR File(s) System CONVERT IN service started."
  fi
}

charge_start()
{
  cd $HOME
  #Start CHARGE service
  pid_file=$HOME/proc/cdrfile_charge.pid
  log_file=$HOME/log/charge_service.log
  APP_COMMAND=cdrfile.manager.ChargeManager; export APP_COMMAND
  if [ -f $pid_file ] ; then
    echo "   - CDR File(s) System CHARGE service already started."
  else

    java -Xms512m -Xmx1024m $APP_COMMAND $cfg_file >>$log_file 2>&1 &
    echo $! > $pid_file
    echo "   - CDR File(s) System CHARGE service started."
  fi
}

export_start()
{
  cd $HOME
  #Start EXPORT service
  pid_file=$HOME/proc/cdrfile_export.pid
  log_file=$HOME/log/export_service.log
  APP_COMMAND=cdrfile.manager.ExportManager; export APP_COMMAND
  if [ -f $pid_file ] ; then
    echo "   - CDR File(s) System EXPORT service already started."
  else

    java -Xms512m -Xmx1024m $APP_COMMAND $cfg_file >>$log_file 2>&1 &
    echo $! > $pid_file
    echo "   - CDR File(s) System EXPORT service started."
  fi
}

collect_start()
{
  cd $HOME
  #Start COLLECT service
  pid_file=$HOME/proc/cdrfile_collect.pid
  log_file=$HOME/log/collect_service.log
  APP_COMMAND=cdrfile.manager.CollectManager; export APP_COMMAND
  if [ -f $pid_file ] ; then
    echo "   - CDR File(s) System COLLECT service already started."
  else

    java -Xms512m -Xmx1024m $APP_COMMAND $cfg_file >>$log_file 2>&1 &
    echo $! > $pid_file
    echo "   - CDR File(s) System COLLECT service started."
  fi
}

general_start()
{
  cd $HOME
  #Start GENERAL service
  pid_file=$HOME/proc/cdrfile_general.pid
  log_file=$HOME/log/general_service.log
  APP_COMMAND=cdrfile.manager.GeneralManager; export APP_COMMAND
  if [ -f $pid_file ] ; then
    echo "   - CDR File(s) System GENERAL service already started."
  else

    java -Xms128m -Xmx512m $APP_COMMAND $cfg_file >>$log_file 2>&1 &
    echo $! > $pid_file
    echo "   - CDR File(s) System GENERAL service started."
  fi
}

all_stop()
{
 	echo "CDR File(s) System ALL service stopping ..."
  	ftp_stop
  	convert_stop
  	convert_in_stop
  	#charge_stop
  	export_stop
  	#collect_stop
  	general_stop
  	echo "CDR File(s) System ALL service stopped."
}

ftp_stop()
{
	cd $HOME
  	pid_file=$HOME/proc/cdrfile_ftp.pid
  	if [ -f $pid_file ] ; then
    	p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
        done
 		rm $pid_file
        echo "   - CDR File(s) System FTP service stopped."
  	else
    	echo "   - Could not found PID file."
  	fi
}

convert_stop()
{
	pid_file=$HOME/proc/cdrfile_convert.pid
  	if [ -f $pid_file ] ; then
    	p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
        done
 		rm $pid_file
        echo "   - CDR File(s) System CONVERT service stopped."
  	else
    	echo "   - Could not found PID file."
  	fi
}
convert_in_stop()
{
	pid_file=$HOME/proc/cdrfile_in_convert.pid
  	if [ -f $pid_file ] ; then
    	p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
        done
 		rm $pid_file
        echo "   - CDR File(s) System CONVERT IN service stopped."
  	else
    	echo "   - Could not found PID file."
  	fi
}

charge_stop()
{
  	cd $HOME
  	pid_file=$HOME/proc/cdrfile_charge.pid
  	if [ -f $pid_file ] ; then
	    p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
    	done
 		rm $pid_file
    	echo "   - CDR File(s) System CHARGE service stopped."
  	else
    	echo "   - Could not found PID file."
  	fi
}

export_stop()
{
  	cd $HOME
  	pid_file=$HOME/proc/cdrfile_export.pid
  	if [ -f $pid_file ] ; then
	    p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
        done
 		rm $pid_file
        echo "   - CDR File(s) System EXPORT service stopped."
  	else
    	echo "   - Could not found PID file."
  fi
}

collect_stop()
{
  	cd $HOME
  	pid_file=$HOME/proc/cdrfile_collect.pid
  	if [ -f $pid_file ] ; then
    	p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
        done
 		rm $pid_file
        echo "   - CDR File(s) System COLLECT service stopped."
  	else
    	echo "   - Could not found PID file."
  	fi
}

general_stop()
{
  	cd $HOME
  	pid_file=$HOME/proc/cdrfile_general.pid
  	if [ -f $pid_file ] ; then
    	p_id=`cat $pid_file`
    	kill $p_id
    	while [ ! "`ps -edo pid|grep $p_id`"="" ]
      	do
			[ -z "$flags" ] && echo "     Waiting for service to exit\c" || echo ".\c"
        	flags=a$flags
			if [ "$flags"=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ] ; then
	  			kill -9 `cat $pid_file`
			fi
        done
 		rm $pid_file
        echo "   - CDR File(s) System GENERAL service stopped."
  	else
    	echo "   - Could not found PID file."
  	fi
}

all_restart() #Start CDR File(s) System Service
{
	echo "CDR File(s) System ALL service restarting ..."
	ftp_restart
	convert_restart
	convert_in_restart
	#charge_restart
	export_restart
	#collect_restart
	general_restart
	echo "CDR File(s) System ALL service restarted."
}

ftp_restart()
{
	ftp_stop
	ftp_start
}

convert_restart()
{
	convert_stop
	convert_start
}

convert_in_restart()
{
	convert_in_stop
	convert_in_start
}

charge_restart()
{
	charge_stop
	charge_start
}

export_restart()
{
	export_stop
	export_start
}

collect_restart()
{
	collect_stop
	collect_start
}

general_restart()
{
	general_stop
	general_start
}

case "$1" in
    'start')
        case "$2" in
    	    'all')
		        all_start
      		;;
	        'ftp')
          		ftp_start
      		;;
	        'convert')
      	     		convert_start
          ;;
	        'convertin')
      	     		convert_in_start      	
		;;
          'charge')
		        charge_start
		;;
          'export')
    		export_start
		;;
          'collect')
		collect_start
		;;
          'general')
	    	general_start
		;;
          *)
       	      echo "Usage: $1 {all | ftp | convert |convertin| charge | expor_ | collect | general}"
		          echo ""
    		      exit 1
		      ;;
    esac
	  ;;
    'stop')
        case "$2" in
	        'all')
          		all_stop
		      ;;
	        'ftp')
		          ftp_stop
		      ;;
                'convert')
                      convert_stop
      		      ;;
      		      'convertin')
                      convert_in_stop
      		      ;;
	        'charge')
                      charge_stop
      		      ;;
	        'export')
      		      export_stop
      		      ;;
    	        'collect')
		      collect_stop
      		      ;;
	        'general')
                      general_stop
      		      ;;
	        *)
        	    echo "Usage: $1 {all | ftp | convert | convertin | charge | expor_ | collect | general}"
          		echo ""
          		exit 1
      		;;
    	  esac
	  ;;
    'restart')
      	case "$2" in
	          'all')
            		all_restart
        		;;
      	    'ftp')
            		ftp_restart
        		;;
      	    'convert')
                        convert_restart
        		;;
        		'convertin')
                        convert_in_restart
        		;;
      	    'charge')
            		charge_restart
        		;;
      	    'export')
            		export_restart
        		;;
      	    'collect')
            		collect_restart
        		;;
            'general')
            		general_restart
        		;;
      	    *)
              	echo "Usage: $1 {all | ftp | convert |convertin | charge | expor_ | collect | general}"
            		echo ""
            		exit 1
        		;;
      	esac
  	;;
    *)
	      echo ""
      	echo "Services of cdrfile centralized running ..."
      	echo ""
      	ps -ef|grep cdrfile.manager
      	echo ""
      	echo ""
        echo "Usage command: {start | stop | restart}"
        echo ""
      	exit 1
    ;;
esac
